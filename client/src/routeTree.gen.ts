/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as CodePhoneNumberImport } from './routes/code.$phoneNumber'
import { Route as AuthenticatedHomeImport } from './routes/_authenticated.home'
import { Route as AuthenticatedAllmenusImport } from './routes/_authenticated.all_menus'
import { Route as AuthenticatedAccountImport } from './routes/_authenticated.account'
import { Route as AuthenticatedMenuDateImport } from './routes/_authenticated.menu.$date'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CodePhoneNumberRoute = CodePhoneNumberImport.update({
  id: '/code/$phoneNumber',
  path: '/code/$phoneNumber',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedHomeRoute = AuthenticatedHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAllmenusRoute = AuthenticatedAllmenusImport.update({
  id: '/all_menus',
  path: '/all_menus',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedAccountRoute = AuthenticatedAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedMenuDateRoute = AuthenticatedMenuDateImport.update({
  id: '/menu/$date',
  path: '/menu/$date',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/account': {
      id: '/_authenticated/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/all_menus': {
      id: '/_authenticated/all_menus'
      path: '/all_menus'
      fullPath: '/all_menus'
      preLoaderRoute: typeof AuthenticatedAllmenusImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeImport
      parentRoute: typeof AuthenticatedImport
    }
    '/code/$phoneNumber': {
      id: '/code/$phoneNumber'
      path: '/code/$phoneNumber'
      fullPath: '/code/$phoneNumber'
      preLoaderRoute: typeof CodePhoneNumberImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/menu/$date': {
      id: '/_authenticated/menu/$date'
      path: '/menu/$date'
      fullPath: '/menu/$date'
      preLoaderRoute: typeof AuthenticatedMenuDateImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedAccountRoute: typeof AuthenticatedAccountRoute
  AuthenticatedAllmenusRoute: typeof AuthenticatedAllmenusRoute
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRoute
  AuthenticatedMenuDateRoute: typeof AuthenticatedMenuDateRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedAccountRoute: AuthenticatedAccountRoute,
  AuthenticatedAllmenusRoute: AuthenticatedAllmenusRoute,
  AuthenticatedHomeRoute: AuthenticatedHomeRoute,
  AuthenticatedMenuDateRoute: AuthenticatedMenuDateRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/account': typeof AuthenticatedAccountRoute
  '/all_menus': typeof AuthenticatedAllmenusRoute
  '/home': typeof AuthenticatedHomeRoute
  '/code/$phoneNumber': typeof CodePhoneNumberRoute
  '/menu/$date': typeof AuthenticatedMenuDateRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/account': typeof AuthenticatedAccountRoute
  '/all_menus': typeof AuthenticatedAllmenusRoute
  '/home': typeof AuthenticatedHomeRoute
  '/code/$phoneNumber': typeof CodePhoneNumberRoute
  '/menu/$date': typeof AuthenticatedMenuDateRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginRoute
  '/_authenticated/account': typeof AuthenticatedAccountRoute
  '/_authenticated/all_menus': typeof AuthenticatedAllmenusRoute
  '/_authenticated/home': typeof AuthenticatedHomeRoute
  '/code/$phoneNumber': typeof CodePhoneNumberRoute
  '/_authenticated/menu/$date': typeof AuthenticatedMenuDateRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/account'
    | '/all_menus'
    | '/home'
    | '/code/$phoneNumber'
    | '/menu/$date'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/account'
    | '/all_menus'
    | '/home'
    | '/code/$phoneNumber'
    | '/menu/$date'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/login'
    | '/_authenticated/account'
    | '/_authenticated/all_menus'
    | '/_authenticated/home'
    | '/code/$phoneNumber'
    | '/_authenticated/menu/$date'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginRoute: typeof LoginRoute
  CodePhoneNumberRoute: typeof CodePhoneNumberRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginRoute: LoginRoute,
  CodePhoneNumberRoute: CodePhoneNumberRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/login",
        "/code/$phoneNumber"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/account",
        "/_authenticated/all_menus",
        "/_authenticated/home",
        "/_authenticated/menu/$date"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_authenticated/account": {
      "filePath": "_authenticated.account.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/all_menus": {
      "filePath": "_authenticated.all_menus.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/home": {
      "filePath": "_authenticated.home.tsx",
      "parent": "/_authenticated"
    },
    "/code/$phoneNumber": {
      "filePath": "code.$phoneNumber.tsx"
    },
    "/_authenticated/menu/$date": {
      "filePath": "_authenticated.menu.$date.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
